-- Copyright (C) 1991-2009 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.

-- Quartus II generated Memory Initialization File (.mif)


--				Register Select
--Rigister  		Hex Sel Code (3 bits only) 		Binary Sel Code
--	A 						 0x4							100
--	B 						 0x3							011
--	X 						 0x2							010
--	Y 						 0x1							001
--	SP 						 0x0							000
--


--					ALU Select	
--Operation			Hex Sel Code (3 bits only)		Binary Sel Code
--
--  LSL						 0x6							 110
--  LSR						 0x5							 101
--	XOR						 0x4							 100
--	OR 						 0x3 							 011
--	AND						 0x2							 010
--	SUB						 0x1							 001 
--	ADD						 0x0							 000
--


					-- Bit 0		= Data					Bit 9		= REG_sel
					-- Bit 1		= Data					Bit 10		= REG_sel	
					-- Bit 2		= Data					Bit 11		= ALU_sel
					-- Bit 3		= Data					Bit 12		= ALU_sel
					-- Bit 4		= Data					Bit 13		= ALU_sel
					-- Bit 5		= Data					Bit 14		= REG_data_sel
					-- Bit 6		= Data					Bit 15		= T1
					-- Bit 7		= Data					Bit 16		= T2
					-- Bit 8		= REG_sel					




WIDTH=17;
DEPTH=256;

ADDRESS_RADIX = UNS;          -- The radix for address values
DATA_RADIX = BIN;             -- The radix for data values



CONTENT BEGIN			


-- **************************** ADDD START ***************************** 


					0 : 11111111100000000;		-- NOP / INIT
				  	1 : 10011101100001110;		-- Data to B 		#0E
					2 : 10011101100001110;		-- B to T2
					3 : 01011110001110000;		-- Data to A 		#70
					4 : 01011110001110000;		-- A to T1
					5 : 00100011100000000;		-- ADD
					6 : 00100011100000000;		-- ADD
					7 : 00100001000000000;		-- Result to X 		
					8 : 00100001000000000;		-- Result to X
					9 : 00100111100000000;		-- SUB
				   10 : 00100111100000000;		-- SUB
				   11 : 00100100100000000;		-- Result to Y
				   12 : 00100100100000000;		-- Result to Y
				   13 : 01011100100000000;		-- ResultY to T1
				   14 : 10011101000000000;		-- ResultX to T2

-- **************************** ADDD FINISH **************************** 



-- **************************** NOP START ****************************** 

				   15 : 00111111100000000;		-- NOP / INIT
				   16 : 00111111100000000;		-- NOP / INIT
				   17 : 00111111100000000;		-- NOP / INIT
				   18 : 00111111100000000;		-- NOP / INIT
				   19 : 00111111100000000;		-- NOP / INIT
				   20 : 00111111100000000;		-- NOP / INIT

-- **************************** NOP FINISH ***************************** 
			   


-- **************************** EORA START ***************************** 

				     -- t ds alu reg   DATA 


				   21 : 00011110000111100;		-- Data to A 		#3C
				   22 : 00011101100001111;		-- Data to B 		#0F
				   23 : 01011110000000000;		-- A to T1
				   24 : 10011101100000000;		-- B to T2
				   25 : 00101100000000000;		-- XOR
				   26 : 00110001000000000;		-- Result to X
				   27 : 01011101000000000;		-- X to T1

-- **************************** EORA FINISH **************************** 

-- **************************** NOP START ****************************** 

				   28 : 00111111100000000;		-- NOP / INIT
				   29 : 00111111100000000;		-- NOP / INIT
				   30 : 00111111100000000;		-- NOP / INIT
				   31 : 00111111100000000;		-- NOP / INIT
				   32 : 00111111100000000;		-- NOP / INIT
				   33 : 00111111100000000;		-- NOP / INIT
				   34 : 00111111100000000;		-- NOP / INIT

-- **************************** NOP FINISH ***************************** 
		


-- **************************** ORAA START ***************************** 

				     -- t ds alu reg   DATA 

				   35 : 00011110000110100;		-- Data to A 		#3C
				   36 : 00011101100000111;		-- Data to B 		#0F
				   37 : 01011110000000000;		-- A to T1
				   38 : 10011101100000000;		-- B to T2
				   39 : 00101111100000000;		-- XOR
				   49 : 00101101000000000;		-- Result to X
				   41 : 01011101000000000;		-- X to T1

-- **************************** ORRA FINISH **************************** 



-- **************************** NOP START ****************************** 

				   42 : 00111111100000000;		-- NOP / INIT
				   43 : 00111111100000000;		-- NOP / INIT
				   44 : 00111111100000000;		-- NOP / INIT
				   45 : 00111111100000000;		-- NOP / INIT
				   46 : 00111111100000000;		-- NOP / INIT
				   47 : 00111111100000000;		-- NOP / INIT
				   48 : 00111111100000000;		-- NOP / INIT
				   49 : 00111111100000000;		-- NOP / INIT


-- **************************** NOP FINISH ***************************** 


-- **************************** LSL LSR START ****************************** 
					-- does not use T1 or T2	T1 only LSL		T2 only LSR				-- Cant hold result reg to long
				     -- t ds alu reg   DATA 


-- Cant reenable t1 or t2, it will shift input to output ****


				   50 : 00011110011011000;		-- Data to A        #D8         LSL = B0
				   51 : 00011101100001110;		-- Data to B        #0E			LSR = 07
				   52 : 10011101100000000;		-- B to T2
				   53 : 01011110000000000;		-- A to T1
				   54 : 00110101000000000;		-- LSR T2
				   55 : 00110101000000000;		-- Result to X
				   56 : 00111000100000000;		-- LSL T1
				   57 : 00111000100000000;		-- Result to Y 		
				   58 : 01011101000000000;		-- X to T1
				   59 : 10011100100000000;		-- Y to T2
	

-- **************************** LSL LSR FINISH ***************************** 
		

-- **************************** ONE's Complement START ***************************** 

				     -- t ds alu reg   DATA 

				   61 : 00111111100000000;		-- NOP / INIT

				   61 : 00011110000111100;		-- Data to A 		#3C			Onces complement = 11000011   = 0xC3
				   62 : 00011101111111111;		-- Data to B 		#FF
				   63 : 01011110000000000;		-- A to T1
				   64 : 10011101100000000;		-- B to T2
				   65 : 00101100000000000;		-- XOR
				   66 : 00110001000000000;		-- Result to X
				   67 : 11011101000000000;		-- X to T1 & T2

-- **************************** ONE's Complement FINISH **************************** 




			[68..255] : 00111111100000000;		-- NOP / INIT


END;
